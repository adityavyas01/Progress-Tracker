rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow users to read and write their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow authenticated users to read study groups
    match /studyGroups/{groupId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        exists(/databases/$(database)/documents/studyGroups/$(groupId)/members/$(request.auth.uid));
      
      // Allow members to read and write messages
      match /messages/{messageId} {
        allow read, write: if request.auth != null && 
          exists(/databases/$(database)/documents/studyGroups/$(groupId)/members/$(request.auth.uid));
      }
      
      // Allow members to read and write member data
      match /members/{memberId} {
        allow read: if request.auth != null;
        allow write: if request.auth != null && 
          (request.auth.uid == memberId || 
           exists(/databases/$(database)/documents/studyGroups/$(groupId)/members/$(request.auth.uid)));
      }
    }

    // Allow authenticated users to read and write their own bookmarks
    match /bookmarks/{bookmarkId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
    }

    // Allow authenticated users to read and write their own tasks
    match /tasks/{taskId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
    }

    // Allow authenticated users to read and write their own notifications
    match /notifications/{notificationId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
    }

    // Allow authenticated users to read leaderboard data
    match /leaderboard/{entryId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
    }
  }
} 